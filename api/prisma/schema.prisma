// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  username String @unique
  email String @unique
  birth String?
  bio String?
  coverImage String?
  profileImage String?
  hashedPassword String?
  hasNotification Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followingIds String[] @db.ObjectId

  account Account?
  posts Post[]
  comments Comment[]
  notifications Notification[]
}

model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  providerId String
  userId String @unique @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  images String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  likedIds String[] @db.ObjectId
  comments Comment[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}