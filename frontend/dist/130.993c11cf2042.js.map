{"version":3,"file":"130.993c11cf2042.js","mappings":"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","sources":["webpack://twitter-clone/./src/components/MainHeading.tsx","webpack://twitter-clone/./src/helpers/mouse.ts","webpack://twitter-clone/./src/hooks/useFollow.ts","webpack://twitter-clone/./src/hooks/useProfileModal.ts","webpack://twitter-clone/./src/components/profile/ProfileHero.tsx","webpack://twitter-clone/./src/components/profile/ProfileBio.tsx","webpack://twitter-clone/./src/components/profile/ProfileButton.tsx","webpack://twitter-clone/./src/pages/Profile.tsx","webpack://twitter-clone/./src/hooks/useProfile.ts"],"sourcesContent":["import React from \"react\";\r\nimport { IoMdArrowBack } from \"react-icons/io\";\r\n\r\ninterface ProfileHeadingProps {\r\n  title: string;\r\n  length?: number;\r\n  onClick: () => void;\r\n  backdropBlur?: boolean;\r\n}\r\n\r\nconst ProfileHeading: React.FC<ProfileHeadingProps> = ({\r\n  title,\r\n  length,\r\n  onClick,\r\n  backdropBlur,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`\r\n        z-10 \r\n        sticky \r\n        top-0 \r\n        bg-white/70\r\n        flex \r\n        items-center \r\n        py-1 \r\n        px-2 \r\n        gap-6\r\n        ${backdropBlur && \"backdrop-blur-lg\"}\r\n      `}\r\n    >\r\n      <div\r\n        onClick={onClick}\r\n        className=\"p-2 rounded-full hover:bg-neutral-300/40 cursor-pointer\"\r\n      >\r\n        <IoMdArrowBack size={20} />\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <span className=\"font-bold text-lg\">{title}</span>\r\n        {length !== undefined && (\r\n          <span className=\"font-bold text-xs text-gray-400\">\r\n            {length} posts\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeading;\r\n","export const mouseEnterHandler = (\r\n  e: React.MouseEvent,\r\n  isFollowing: (profileId: string) => boolean,\r\n  profileId: string,\r\n  meId?: string\r\n) => {\r\n  if (!isFollowing(profileId)) return;\r\n  if (profileId === meId) return;\r\n\r\n  const button = e.target as HTMLButtonElement;\r\n  const span = button.children[0] as HTMLElement;\r\n\r\n  if (span) {\r\n    span.textContent = \"Unfollow\";\r\n    button.classList.add(\"hover:border-rose-200\");\r\n    button.classList.add(\"hover:bg-rose-100\");\r\n    button.classList.add(\"hover:text-red-500\");\r\n  }\r\n};\r\n\r\nexport const mouseLeaveHandler = (e: React.MouseEvent) => {\r\n  const button = e.target as HTMLButtonElement;\r\n  const span = button.children[0];\r\n\r\n  button.classList.remove(\"hover:border-rose-200\");\r\n  button.classList.remove(\"hover:bg-rose-100\");\r\n  button.classList.remove(\"hover:text-red-500\");\r\n\r\n  if (span && span.textContent === \"Unfollow\") {\r\n    span.textContent = \"Following\";\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport { RootState } from \"../redux/store\";\r\nimport {\r\n  onProfileFollowAdd,\r\n  onProfileFollowDelete,\r\n} from \"../redux/reducers/profile\";\r\nimport { onMeFollowingAdd, onMeFollowingDelete } from \"../redux/reducers/me\";\r\n\r\nconst useFollow = () => {\r\n  const me = useSelector((state: RootState) => state.me);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isFollowing = (userId: string) => {\r\n    if (me.followingIds.includes(userId)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const followHandler = ({\r\n    followerId,\r\n    profileId,\r\n  }: {\r\n    followerId: string;\r\n    profileId: string;\r\n  }) => {\r\n    try {\r\n      if (!isFollowing(followerId)) {\r\n        axios.post(\"/user/follow\", { followerId });\r\n\r\n        dispatch(onProfileFollowAdd({ meId: me.id, followerId, profileId }));\r\n        dispatch(onMeFollowingAdd({ followerId }));\r\n      } else {\r\n        axios.delete(\"/user/follow\", { data: { followerId } });\r\n\r\n        dispatch(onProfileFollowDelete({ meId: me.id, followerId, profileId }));\r\n        dispatch(onMeFollowingDelete({ followerId }));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      if (error instanceof AxiosError) {\r\n        if (error.response?.status === 500) {\r\n          return alert(error.response.data);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return { isFollowing, followHandler };\r\n};\r\n\r\nexport default useFollow;\r\n","import { create } from \"zustand\";\r\n\r\ninterface ProfileModalStore {\r\n  isOpen: boolean;\r\n  onOpen: () => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst useProfileModal = create<ProfileModalStore>((set) => ({\r\n  isOpen: false,\r\n  onOpen: () => set({ isOpen: true }),\r\n  onClose: () => set({ isOpen: false }),\r\n}));\r\n\r\nexport default useProfileModal;\r\n","import React from \"react\";\r\n\r\nimport { src } from \"../../helpers/image\";\r\n\r\ninterface UserHeroProps {\r\n  coverImage: string;\r\n  profileImage: string;\r\n}\r\n\r\nconst UserHero: React.FC<UserHeroProps> = ({ coverImage, profileImage }) => {\r\n  return (\r\n    <div className=\"bg-gray-300 h-44 w-full relative\">\r\n      {coverImage && (\r\n        <div className=\"w-full h-full flex\">\r\n          <img\r\n            src={src(coverImage)}\r\n            alt=\"CoverImage\"\r\n            className=\"w-full object-cover\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className=\"\r\n          w-[130px] \r\n          h-[130px]\r\n          flex \r\n          border-4 \r\n          border-white \r\n          rounded-full \r\n          absolute\r\n          bottom-0\r\n          translate-y-1/2\r\n          translate-x-4\r\n          cursor-pointer\r\n        \"\r\n      >\r\n        <img\r\n          src={src(profileImage)}\r\n          alt=\"ProfileImage\"\r\n          referrerPolicy=\"no-referrer\"\r\n          className=\"\r\n            w-full \r\n            object-cover \r\n            rounded-full \r\n            hover:brightness-90 \r\n            transition\r\n          \"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHero;\r\n","import React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { BiCalendar } from \"react-icons/bi\";\r\n\r\ninterface ProfileBioProps {\r\n  username: string;\r\n  userId: string;\r\n  bio: string;\r\n  createdAt: string;\r\n  followingIdsLength: number;\r\n  followerIdsLength: number;\r\n}\r\n\r\nconst ProfileBio: React.FC<ProfileBioProps> = ({\r\n  username,\r\n  userId,\r\n  bio,\r\n  createdAt,\r\n  followingIdsLength,\r\n  followerIdsLength,\r\n}) => {\r\n  return (\r\n    <div className=\"mt-5 px-4 space-y-2\">\r\n      <div className=\"flex flex-col\">\r\n        <span className=\"font-bold text-lg\">{username}</span>\r\n        <span className=\"text-base text-gray-400\">@{userId}</span>\r\n      </div>\r\n\r\n      {bio.length > 0 && <span className=\"block py-1 text-sm\">{bio}</span>}\r\n\r\n      <div className=\"flex items-center gap-1 text-gray-500\">\r\n        <BiCalendar size={20} />\r\n        <span>\r\n          Joined {createdAt && format(new Date(createdAt), \"MMMM yyyy\")}\r\n        </span>\r\n      </div>\r\n      <div className=\"flex gap-5\">\r\n        <div className=\"space-x-1\">\r\n          <span className=\"font-bold\">{followingIdsLength}</span>\r\n          <span className=\"text-gray-500\">Following</span>\r\n        </div>\r\n        <div className=\"space-x-1\">\r\n          <span className=\"font-bold\">{followerIdsLength}</span>\r\n          <span className=\"text-gray-500\">Followers</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileBio;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { mouseEnterHandler, mouseLeaveHandler } from \"../../helpers/mouse\";\r\nimport { bgWhite, hoverGray, textBlack } from \"../../helpers/colors\";\r\n\r\nimport useProfileModal from \"../../hooks/useProfileModal\";\r\nimport useFollow from \"../../hooks/useFollow\";\r\n\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ProfileState } from \"../../redux/reducers/profile\";\r\n\r\ninterface ProfileButtonProps {\r\n  profile: ProfileState;\r\n  profileId: string | undefined;\r\n}\r\n\r\nconst ProfileButton: React.FC<ProfileButtonProps> = ({\r\n  profile,\r\n  profileId,\r\n}) => {\r\n  const profileModal = useProfileModal();\r\n  const { isFollowing, followHandler } = useFollow();\r\n\r\n  const me = useSelector((state: RootState) => state.me);\r\n\r\n  const buttonLabel = () => {\r\n    if (profile.id === me.id) {\r\n      return \"Edit profile\";\r\n    }\r\n\r\n    if (isFollowing(profile.id)) {\r\n      return \"Following\";\r\n    }\r\n\r\n    return \"Follow\";\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    if (profile.id === me.id) {\r\n      return profileModal.onOpen();\r\n    }\r\n\r\n    return profileId && followHandler({ followerId: profile.id, profileId });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 flex justify-end mr-4\">\r\n      <button\r\n        onMouseEnter={(e) =>\r\n          mouseEnterHandler(e, isFollowing, profile.id, me.id)\r\n        }\r\n        onMouseLeave={mouseLeaveHandler}\r\n        onClick={clickHandler}\r\n        className={`\r\n            py-2\r\n            px-5\r\n            flex\r\n            flex-row\r\n            justify-center\r\n            items-center\r\n            border-2\r\n            rounded-full\r\n            w-fit\r\n            transition\r\n            ${bgWhite}\r\n            ${textBlack}\r\n            ${hoverGray}\r\n        `}\r\n      >\r\n        <span className=\"font-semibold\">{buttonLabel()}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport MainHeading from \"../components/MainHeading\";\r\nimport Lists from \"../components/Lists\";\r\nimport Loader from \"../components/Loader\";\r\nimport ProfileHero from \"../components/profile/ProfileHero\";\r\nimport ProfileBio from \"../components/profile/ProfileBio\";\r\nimport ProfileButton from \"../components/profile/ProfileButton\";\r\n\r\nimport useProfile from \"../hooks/useProfile\";\r\nimport useProfilePageIndex from \"../hooks/useProfilePageIndex\";\r\nimport useLists from \"../hooks/useLists\";\r\n\r\nimport { RootState } from \"../redux/store\";\r\nimport { onProfile, onProfilePosts } from \"../redux/reducers/profile\";\r\n\r\nconst Profile = () => {\r\n  const [isEnter, setIsEnter] = useState(false);\r\n  const [isLocked, setIsLocked] = useState(false);\r\n  const { userId: profileId } = useParams();\r\n\r\n  const { data, mutate } = useProfile(profileId);\r\n\r\n  const profile = useSelector((state: RootState) => state.profile);\r\n\r\n  const profilePageIndex = useProfilePageIndex();\r\n  const pageIndexPlus = profilePageIndex.onPlus;\r\n  const {\r\n    data: listsData,\r\n    isValidating,\r\n    mutate: listsMutate,\r\n    hasMoreData,\r\n  } = useLists({\r\n    pathname: `/user/profile/${profileId}/post/all`,\r\n    category: \"PROFILE\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    if (!isLocked && profile.id !== data.id) {\r\n      setIsLocked(true);\r\n      mutate()\r\n        .then((data) => {\r\n          dispatch(onProfile(data));\r\n          setIsLocked(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [profile.id, data, dispatch, mutate, isLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasMoreData && profile.posts.length === 0) {\r\n      setIsEnter(true);\r\n    }\r\n  }, [profile.posts.length, hasMoreData]);\r\n\r\n  useEffect(() => {\r\n    if (!listsData) return;\r\n\r\n    if (hasMoreData && isEnter) {\r\n      listsMutate()\r\n        .then((data) => {\r\n          dispatch(onProfilePosts(data));\r\n          setIsEnter(false);\r\n          pageIndexPlus();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [isEnter, listsMutate, listsData, dispatch, hasMoreData, pageIndexPlus]);\r\n\r\n  return (\r\n    <div className=\"relative h-full\">\r\n      {profile.id !== profileId ? (\r\n        <Loader size={80} absolute text />\r\n      ) : (\r\n        <>\r\n          <MainHeading\r\n            title={profile.username}\r\n            length={profile.posts.length}\r\n            onClick={() => navigate(-1)}\r\n            backdropBlur\r\n          />\r\n          <ProfileHero\r\n            coverImage={profile.coverImage}\r\n            profileImage={profile.profileImage}\r\n          />\r\n          <ProfileButton profile={profile} profileId={profileId} />\r\n          <ProfileBio\r\n            username={profile.username}\r\n            userId={profile.id.slice(0, 10)}\r\n            bio={profile.bio}\r\n            createdAt={profile.createdAt}\r\n            followingIdsLength={profile.followingIds.length}\r\n            followerIdsLength={profile.followerIds.length}\r\n          />\r\n          <hr className=\"my-3\" />\r\n          {hasMoreData && profile.posts.length === 0 ? (\r\n            <Loader size={80} text />\r\n          ) : (\r\n            <Lists\r\n              lists={profile.posts}\r\n              isValidating={isValidating}\r\n              isEnter={isEnter}\r\n              setIsEnter={setIsEnter}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import useSWRImmutable from \"swr/immutable\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport fetcher from \"../libs/fetcher\";\r\n\r\nconst useProfile = (profileId: string | undefined) => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data, mutate } = useSWRImmutable(\r\n    profileId ? `/user/profile/${profileId}` : null,\r\n    fetcher,\r\n    {\r\n      onError: (error) => {\r\n        console.log(error);\r\n        toast.error(error.response.data);\r\n\r\n        if (error.response.status === 500) {\r\n          return alert(error.response.data);\r\n        }\r\n\r\n        navigate(\"/home\");\r\n      },\r\n    }\r\n  );\r\n\r\n  return { data, mutate };\r\n};\r\n\r\nexport default useProfile;\r\n"],"names":["_a","title","length","onClick","backdropBlur","React","className","concat","IoMdArrowBack","size","undefined","mouseEnterHandler","e","isFollowing","profileId","meId","button","target","span","children","textContent","classList","add","mouseLeaveHandler","remove","me","useSelector","state","dispatch","useDispatch","userId","followingIds","includes","followHandler","followerId","axios","delete","data","onProfileFollowDelete","id","onMeFollowingDelete","post","onProfileFollowAdd","onMeFollowingAdd","error","console","log","AxiosError","_b","response","status","alert","create","set","isOpen","onOpen","onClose","coverImage","profileImage","src","alt","referrerPolicy","username","bio","createdAt","followingIdsLength","followerIdsLength","BiCalendar","format","Date","profile","profileModal","useProfileModal","useFollow","onMouseEnter","onMouseLeave","bgWhite","textBlack","hoverGray","useState","isEnter","setIsEnter","isLocked","setIsLocked","useParams","_c","navigate","useNavigate","useSWRImmutable","fetcher","onError","toast","mutate","useProfile","pageIndexPlus","useProfilePageIndex","onPlus","_d","useLists","pathname","category","listsData","isValidating","listsMutate","hasMoreData","useEffect","then","onProfile","catch","posts","onProfilePosts","Loader","absolute","text","MainHeading","ProfileHero","ProfileButton","ProfileBio","slice","followerIds","Lists","lists"],"sourceRoot":""}