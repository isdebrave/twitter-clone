{"version":3,"file":"581.8a20d431a3e0.js","mappings":"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","sources":["webpack://twitter-clone/./src/helpers/image.ts","webpack://twitter-clone/./src/pages/Carousel.tsx"],"sourcesContent":["import toast from \"react-hot-toast\";\r\n\r\nexport const src = (image: string) => {\r\n  // coverImage는 \"\"면 src를 호출하지 않는다.\r\n  if (image.length === 0) {\r\n    return \"/images/anonymous.jpg\";\r\n  }\r\n\r\n  console.log(image);\r\n  return \"https://source.unsplash.com/random/300×300\";\r\n\r\n  // return image;\r\n};\r\n\r\nexport const addImageHandler = (\r\n  e: React.ChangeEvent<HTMLInputElement>,\r\n  imageCallback: (file: File) => void,\r\n  imagePreviewCallback: (data: string) => void,\r\n  imageFiles?: File[]\r\n) => {\r\n  const files = e.target.files;\r\n\r\n  if (!files) return;\r\n\r\n  // writePost에서 image를 선택할 경우\r\n  if (imageFiles && files.length + imageFiles.length > 4) {\r\n    return toast.error(\"최대 4개까지 선택 가능합니다.\");\r\n  }\r\n\r\n  for (let i = 0; i < files.length; i++) {\r\n    imageCallback(files[i]);\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(files[i]);\r\n    reader.onload = (e) => {\r\n      if (e.target) {\r\n        imagePreviewCallback(e.target.result as string);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const removeImageHandler = (\r\n  e: React.MouseEvent,\r\n  ref: React.RefObject<HTMLInputElement>,\r\n  imageCallback: (fileArray?: File[]) => void,\r\n  imagePreviewCallback: (dataArray?: string[]) => void,\r\n  imageFiles?: File[],\r\n  imagesPreview?: string[]\r\n) => {\r\n  if (ref.current) {\r\n    ref.current.value = \"\";\r\n  }\r\n\r\n  // writePost에서 여러 장의 image를 제거할 경우\r\n  if (imagesPreview && imageFiles) {\r\n    const removeIdx = parseInt(\r\n      (e.target as HTMLImageElement).getAttribute(\"data-idx\") || \"\",\r\n      10\r\n    );\r\n\r\n    const updatedImagesFiles = imageFiles.filter((_, idx) => idx !== removeIdx);\r\n    imageCallback(updatedImagesFiles);\r\n\r\n    const updatedImagesPreview = imagesPreview.filter(\r\n      (_, idx) => idx !== removeIdx\r\n    );\r\n    imagePreviewCallback(updatedImagesPreview);\r\n\r\n    return;\r\n  }\r\n\r\n  imageCallback();\r\n  imagePreviewCallback();\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IoClose, IoArrowBack, IoArrowForward } from \"react-icons/io5\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport { src } from \"../helpers/image\";\r\n\r\nimport { RootState } from \"../redux/store\";\r\nimport { PostState } from \"../redux/reducers/post\";\r\n\r\nconst Carousel = () => {\r\n  const [images, setImages] = useState<string[]>([]);\r\n  const sliderRef = useRef<Slider>(null);\r\n\r\n  const post = useSelector((state: RootState) => state.post);\r\n  const posts = useSelector((state: RootState) => state.posts);\r\n  const profile = useSelector((state: RootState) => state.profile);\r\n\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // post\r\n    let data: PostState | undefined = post;\r\n\r\n    // posts\r\n    if (data.images.length === 0 || postId !== data.id) {\r\n      data = posts.find((post) => post.id === postId);\r\n    }\r\n\r\n    // profile\r\n    if (!data) {\r\n      data = profile.posts.find((post) => post.id === postId);\r\n    }\r\n\r\n    if (data) {\r\n      setImages(data.images);\r\n    }\r\n  }, [post, postId, posts, profile.posts]);\r\n\r\n  const settings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToScroll: 1,\r\n    slidesToShow: 1,\r\n    swipe: true,\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-20 bg-black\">\r\n      <button\r\n        className=\"absolute top-0 left-0 m-2 z-20\"\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        <IoClose className=\"text-white\" size={30} />\r\n      </button>\r\n\r\n      {images.length > 1 && (\r\n        <button\r\n          className=\"absolute left-0 top-1/2 -translate-y-1/2 z-20 m-2\"\r\n          onClick={() => sliderRef.current?.slickPrev()}\r\n        >\r\n          <IoArrowBack className=\"text-white\" size={20} />\r\n        </button>\r\n      )}\r\n\r\n      <Slider ref={sliderRef} {...settings}>\r\n        {images.map((image, idx) => (\r\n          <li key={image + idx}>\r\n            <img src={src(image)} alt=\"postImage\" />\r\n          </li>\r\n        ))}\r\n      </Slider>\r\n\r\n      {images.length > 1 && (\r\n        <button\r\n          className=\"absolute right-0 top-1/2 -translate-y-1/2 z-20 m-2\"\r\n          onClick={() => sliderRef.current?.slickNext()}\r\n        >\r\n          <IoArrowForward className=\"text-white\" size={20} />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"names":["src","image","length","console","log","addImageHandler","e","imageCallback","imagePreviewCallback","imageFiles","files","target","toast","error","i","reader","FileReader","readAsDataURL","onload","result","removeImageHandler","ref","imagesPreview","current","value","removeIdx_1","parseInt","getAttribute","filter","_","idx","_a","useState","images","setImages","sliderRef","useRef","post","useSelector","state","posts","profile","postId","useParams","navigate","useNavigate","useEffect","data","id","find","React","className","onClick","IoClose","size","slickPrev","IoArrowBack","Slider","_extends","infinite","speed","slidesToScroll","slidesToShow","swipe","map","key","alt","slickNext","IoArrowForward"],"sourceRoot":""}