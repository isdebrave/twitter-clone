{"version":3,"file":"70.24bf1d43664f.js","mappings":"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","sources":["webpack://twitter-clone/./src/components/MainHeading.tsx","webpack://twitter-clone/./src/helpers/image.ts","webpack://twitter-clone/./src/pages/Explore.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { IoMdArrowBack } from \"react-icons/io\";\r\n\r\ninterface ProfileHeadingProps {\r\n  title: string;\r\n  length?: number;\r\n  onClick: () => void;\r\n  backdropBlur?: boolean;\r\n}\r\n\r\nconst ProfileHeading: React.FC<ProfileHeadingProps> = ({\r\n  title,\r\n  length,\r\n  onClick,\r\n  backdropBlur,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`\r\n        z-10 \r\n        sticky \r\n        top-0 \r\n        bg-white/70\r\n        flex \r\n        items-center \r\n        py-1 \r\n        px-2 \r\n        gap-6\r\n        ${backdropBlur && \"backdrop-blur-lg\"}\r\n      `}\r\n    >\r\n      <div\r\n        onClick={onClick}\r\n        className=\"p-2 rounded-full hover:bg-neutral-300/40 cursor-pointer\"\r\n      >\r\n        <IoMdArrowBack size={20} />\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <span className=\"font-bold text-lg\">{title}</span>\r\n        {length !== undefined && (\r\n          <span className=\"font-bold text-xs text-gray-400\">\r\n            {length} posts\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeading;\r\n","import axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport const src = (image: string) => {\r\n  // coverImage는 \"\"면 src를 호출하지 않는다.\r\n  if (image.length === 0) {\r\n    return \"/images/anonymous.jpg\";\r\n  }\r\n\r\n  // if (image.includes(\"http\") || image.includes(\"data\")) {\r\n  //   return image;\r\n  // }\r\n\r\n  // return `${axios.defaults.baseURL}/${image}`;\r\n\r\n  console.log(image);\r\n\r\n  return image;\r\n};\r\n\r\nexport const addImageHandler = (\r\n  e: React.ChangeEvent<HTMLInputElement>,\r\n  imageCallback: (file: File) => void,\r\n  imagePreviewCallback: (data: string) => void,\r\n  imageFiles?: File[]\r\n) => {\r\n  const files = e.target.files;\r\n\r\n  if (!files) return;\r\n\r\n  // writePost에서 image를 선택할 경우\r\n  if (imageFiles && files.length + imageFiles.length > 4) {\r\n    return toast.error(\"최대 4개까지 선택 가능합니다.\");\r\n  }\r\n\r\n  for (let i = 0; i < files.length; i++) {\r\n    imageCallback(files[i]);\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(files[i]);\r\n    reader.onload = (e) => {\r\n      if (e.target) {\r\n        imagePreviewCallback(e.target.result as string);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport const removeImageHandler = (\r\n  e: React.MouseEvent,\r\n  ref: React.RefObject<HTMLInputElement>,\r\n  imageCallback: (fileArray?: File[]) => void,\r\n  imagePreviewCallback: (dataArray?: string[]) => void,\r\n  imageFiles?: File[],\r\n  imagesPreview?: string[]\r\n) => {\r\n  if (ref.current) {\r\n    ref.current.value = \"\";\r\n  }\r\n\r\n  // writePost에서 여러 장의 image를 제거할 경우\r\n  if (imagesPreview && imageFiles) {\r\n    const removeIdx = parseInt(\r\n      (e.target as HTMLImageElement).getAttribute(\"data-idx\") || \"\",\r\n      10\r\n    );\r\n\r\n    const updatedImagesFiles = imageFiles.filter((_, idx) => idx !== removeIdx);\r\n    imageCallback(updatedImagesFiles);\r\n\r\n    const updatedImagesPreview = imagesPreview.filter(\r\n      (_, idx) => idx !== removeIdx\r\n    );\r\n    imagePreviewCallback(updatedImagesPreview);\r\n\r\n    return;\r\n  }\r\n\r\n  imageCallback();\r\n  imagePreviewCallback();\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport axios from \"axios\";\r\n\r\nimport MainHeading from \"../components/MainHeading\";\r\n\r\nimport { MeState } from \"../redux/reducers/me\";\r\n\r\nimport { src } from \"../helpers/image\";\r\n\r\nconst Explore = () => {\r\n  const [users, setUsers] = useState<MeState[]>([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const debounce = (\r\n    callback: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    delay: number\r\n  ) => {\r\n    let timerId: NodeJS.Timeout;\r\n\r\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (timerId) clearTimeout(timerId);\r\n\r\n      timerId = setTimeout(() => callback(e), delay);\r\n    };\r\n  };\r\n\r\n  const changeHandler = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n\r\n    if (value.length === 0) {\r\n      setUsers([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"user/search\", { value });\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainHeading title=\"Explore\" onClick={() => navigate(-1)} />\r\n      <div className=\"py-2 px-6 w-full relative\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"\r\n            peer\r\n            w-full\r\n            bg-gray-100\r\n            border\r\n            border-gray-100\r\n            rounded-full\r\n            p-3\r\n            pl-16\r\n            outline-none\r\n            focus:border-sky-500\r\n            focus:bg-white\r\n          \"\r\n          onChange={debounce(\r\n            (e: React.ChangeEvent<HTMLInputElement>) => changeHandler(e),\r\n            300\r\n          )}\r\n        />\r\n        <div\r\n          className=\"\r\n            absolute \r\n            top-1/2 \r\n            -translate-y-1/2 \r\n            left-12 \r\n            text-gray-500 \r\n            peer-focus:text-sky-500\r\n          \"\r\n        >\r\n          <GoSearch size={23} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-6\">\r\n        <div\r\n          className=\"\r\n            w-full\r\n            bg-white\r\n            rounded-lg\r\n            max-h-[350px]\r\n            overflow-auto\r\n          \"\r\n          style={{ boxShadow: \"0 0 8px #ddd\" }}\r\n        >\r\n          {users.map((user) => (\r\n            <Link\r\n              to={`/${user.id}`}\r\n              key={user.id}\r\n              className=\"\r\n                py-2 \r\n                px-4 \r\n                cursor-pointer \r\n                hover:bg-slate-100 \r\n                flex \r\n                items-center \r\n                gap-2\r\n              \"\r\n            >\r\n              <div\r\n                className=\"\r\n                  w-[40px] \r\n                  h-[40px] \r\n                  flex\r\n                  rounded-full \r\n                  overflow-hidden \r\n                \"\r\n              >\r\n                <img\r\n                  src={src(user.profileImage)}\r\n                  alt=\"ProfileImage\"\r\n                  className=\"w-full object-cover\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex flex-col\">\r\n                <span className=\"font-bold\">{user.username}</span>\r\n                <span className=\"text-gray-500\">@{user.id.slice(0, 10)}</span>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n"],"names":["_a","title","length","onClick","backdropBlur","React","className","concat","IoMdArrowBack","size","undefined","src","image","console","log","addImageHandler","e","imageCallback","imagePreviewCallback","imageFiles","files","target","toast","error","i","reader","FileReader","readAsDataURL","onload","result","removeImageHandler","ref","imagesPreview","current","value","removeIdx_1","parseInt","getAttribute","filter","_","idx","callback","timerId","useState","users","setUsers","navigate","useNavigate","MainHeading","type","placeholder","onChange","axios","post","response","sent","data","error_1","changeHandler","clearTimeout","setTimeout","GoSearch","style","boxShadow","map","user","Link","to","id","key","profileImage","alt","username","slice"],"sourceRoot":""}