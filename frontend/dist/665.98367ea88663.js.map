{"version":3,"file":"665.98367ea88663.js","mappings":"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","sources":["webpack://twitter-clone/./src/components/Button.tsx","webpack://twitter-clone/./src/hooks/useWriteForm.ts","webpack://twitter-clone/./src/components/WritePost.tsx","webpack://twitter-clone/./src/pages/Home.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { IconType } from \"react-icons\";\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\r\n  label: string;\r\n  bold?: boolean;\r\n  icon?: IconType;\r\n  bgColor: string;\r\n  textColor: string;\r\n  hoverColor: string;\r\n  large?: boolean;\r\n  disabled?: boolean;\r\n  fit?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  onClick,\r\n  label,\r\n  bold,\r\n  icon: Icon,\r\n  bgColor,\r\n  textColor,\r\n  hoverColor,\r\n  large,\r\n  disabled,\r\n  fit,\r\n}) => {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={`\r\n        ${large ? \"py-3\" : \"py-2\"}\r\n        px-5 \r\n        flex \r\n        flex-row \r\n        justify-center\r\n        items-center \r\n        border-2\r\n        rounded-full \r\n        ${fit ? \"w-fit\" : \"w-full\"}\r\n        transition\r\n        ${bgColor}\r\n        ${textColor}\r\n        ${hoverColor}\r\n      `}\r\n    >\r\n      {Icon && <Icon size={26} className=\"mr-2\" />}\r\n      <span\r\n        className={`\r\n          ${large ? \"text-lg\" : \"text-base\"}\r\n          ${bold ? \"font-semibold\" : \"font-normal\"}\r\n        `}\r\n      >\r\n        {label}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport { RootState } from \"../redux/store\";\r\nimport { PostState } from \"../redux/reducers/post\";\r\n\r\nconst useWriteForm = (\r\n  defaultValues: FieldValues,\r\n  method: \"POST\" | \"PATCH\" = \"POST\"\r\n) => {\r\n  const me = useSelector((state: RootState) => state.me);\r\n\r\n  const imagesInputRef = useRef<HTMLInputElement>(null);\r\n  const coverImageInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [imagesPreview, setImagesPreview] = useState<string[]>([]);\r\n  const [imageFiles, setImageFiles] = useState<File[]>([]);\r\n\r\n  const [coverImagePreview, setCoverImagePreview] = useState(\"\");\r\n  const [coverImage, setCoverImage] = useState<File | null>(null);\r\n  const [profileImagePreview, setProfileImagePreview] = useState(\"\");\r\n  const [profileImage, setProfileImage] = useState<File | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    watch,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm<FieldValues>();\r\n\r\n  useEffect(() => {\r\n    let isEmpty = true;\r\n    for (const key in defaultValues) {\r\n      if (defaultValues[key] !== \"\") {\r\n        isEmpty = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (isEmpty) return;\r\n\r\n    for (const key in defaultValues) {\r\n      setValue(key, defaultValues[key]);\r\n    }\r\n  }, [defaultValues, setValue]);\r\n\r\n  const resetAll = () => {\r\n    setImagesPreview([]);\r\n    setImageFiles([]);\r\n\r\n    setCoverImagePreview(\"\");\r\n    setCoverImage(null);\r\n    setProfileImagePreview(\"\");\r\n    setProfileImage(null);\r\n\r\n    for (const key in defaultValues) {\r\n      clearErrors(key);\r\n      setValue(key, defaultValues[key]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (props: {\r\n    data: FieldValues;\r\n    fetchUrl: string;\r\n    actionArray: Array<\r\n      (data?: AxiosResponse<any>) => { payload: any; type: any }\r\n    >;\r\n    shouldCommentAlert?: boolean;\r\n    onClose?: () => void;\r\n    post?: PostState;\r\n    onPageIndexPlus?: () => void;\r\n    errorMessage?: string;\r\n  }) => {\r\n    const {\r\n      data,\r\n      fetchUrl,\r\n      actionArray,\r\n      shouldCommentAlert = false,\r\n      onClose,\r\n      post,\r\n      onPageIndexPlus,\r\n      errorMessage,\r\n    } = props;\r\n\r\n    if (\"body\" in data) {\r\n      if (data.body.length === 0 && errorMessage) {\r\n        return toast.error(errorMessage);\r\n      }\r\n    }\r\n\r\n    const formData = new FormData();\r\n    for (const file of imageFiles) {\r\n      formData.append(\"bodyImages\", file);\r\n    }\r\n    post && formData.append(\"postId\", post.id);\r\n    coverImage && formData.append(\"coverImage\", coverImage);\r\n    profileImage && formData.append(\"profileImage\", profileImage);\r\n    formData.append(\"data\", JSON.stringify(data));\r\n\r\n    try {\r\n      if (method === \"POST\") {\r\n        // 더미 데이터\r\n        actionArray.forEach((action) => dispatch(action()));\r\n        onPageIndexPlus && onPageIndexPlus();\r\n\r\n        resetAll();\r\n        onClose && onClose();\r\n\r\n        // 실제 데이터\r\n        const response = await axios.post(fetchUrl, formData);\r\n\r\n        actionArray.forEach((action) => dispatch(action(response.data)));\r\n\r\n        if (shouldCommentAlert && post) {\r\n          axios.post(\"/notification\", {\r\n            body: `${me.username} 님이 ${post.id.slice(\r\n              0,\r\n              10\r\n            )} 포스트에 댓글을 작성했습니다.`,\r\n            userId: post.user.id,\r\n          });\r\n        }\r\n      } else {\r\n        axios.patch(fetchUrl, formData);\r\n\r\n        actionArray.forEach((action) => dispatch(action()));\r\n\r\n        resetAll();\r\n        onClose && onClose();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AxiosError) {\r\n        console.log(error);\r\n        toast.error(error.response?.data);\r\n\r\n        if (error.response?.status === 500) {\r\n          return alert(error.response.data);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const keyDownHandler = (e: React.KeyboardEvent) => {\r\n    const textarea = document.querySelector(\"textarea\")!;\r\n    textarea.style.height = \"auto\";\r\n\r\n    const scrollHeight = (e.target as HTMLTextAreaElement).scrollHeight;\r\n    textarea.style.maxHeight = \"450px\";\r\n    textarea.style.height = scrollHeight + \"px\";\r\n  };\r\n\r\n  return {\r\n    imagesInputRef,\r\n    coverImageInputRef,\r\n\r\n    imagesPreview,\r\n    setImagesPreview,\r\n    imageFiles,\r\n    setImageFiles,\r\n\r\n    coverImagePreview,\r\n    setCoverImagePreview,\r\n    profileImagePreview,\r\n    setProfileImagePreview,\r\n    coverImage,\r\n    setCoverImage,\r\n    profileImage,\r\n    setProfileImage,\r\n\r\n    register,\r\n    errors,\r\n    handleSubmit,\r\n    keyDownHandler,\r\n    onSubmit,\r\n    resetAll,\r\n    watchAllFields: watch(),\r\n  };\r\n};\r\n\r\nexport default useWriteForm;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MdAddPhotoAlternate } from \"react-icons/md\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nimport { RootState } from \"../redux/store\";\r\nimport { onPostsAdd } from \"../redux/reducers/posts\";\r\nimport { onProfilePostsAdd } from \"../redux/reducers/profile\";\r\n\r\nimport { addImageHandler, removeImageHandler, src } from \"../helpers/image\";\r\nimport { bgBlue, hoverDarkBlue, textWhite } from \"../helpers/colors\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nimport useWriteForm from \"../hooks/useWriteForm\";\r\nimport useHomePageIndex from \"../hooks/useHomePageIndex\";\r\n\r\nconst WritePost = () => {\r\n  const me = useSelector((state: RootState) => state.me);\r\n  const homePageIndex = useHomePageIndex();\r\n\r\n  const defaultValues = useMemo(() => {\r\n    return { body: \"\" };\r\n  }, []);\r\n\r\n  const {\r\n    handleSubmit,\r\n    imageFiles,\r\n    imagesPreview,\r\n    register,\r\n    setImageFiles,\r\n    setImagesPreview,\r\n    keyDownHandler,\r\n    imagesInputRef,\r\n    onSubmit,\r\n    watchAllFields,\r\n  } = useWriteForm(defaultValues);\r\n\r\n  const bodyContent = (\r\n    <div className=\"px-6\">\r\n      <div className=\"flex gap-3 mb-4\">\r\n        <div className=\"w-[40px] h-[40px] flex rounded-full overflow-hidden\">\r\n          <img\r\n            src={src(me.profileImage)}\r\n            alt=\"ProfileImage\"\r\n            className=\"w-full object-cover\"\r\n          />\r\n        </div>\r\n        <textarea\r\n          placeholder=\"What is happening?!\"\r\n          {...register(\"body\")}\r\n          rows={2}\r\n          className=\"\r\n            flex-auto \r\n            resize-none \r\n            outline-none \r\n            text-xl \r\n            placeholder-gray-500\r\n          \"\r\n          onKeyDown={keyDownHandler}\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const actionArray: Array<\r\n    (data?: AxiosResponse<any>) => { payload: any; type: any }\r\n  > = [];\r\n\r\n  const options = {\r\n    id: Date.now(),\r\n    body: watchAllFields.body,\r\n    images: imagesPreview,\r\n    views: 0,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    userId: me.id,\r\n    likedIds: [],\r\n    user: {\r\n      id: me.id,\r\n      profileImage: me.profileImage,\r\n      username: me.username,\r\n    },\r\n    comments: [],\r\n  };\r\n\r\n  actionArray.push((data) => onPostsAdd({ options, data }));\r\n  actionArray.push((data) => onProfilePostsAdd({ options, data }));\r\n\r\n  const footerContent = (\r\n    <div className=\"px-6\">\r\n      <form\r\n        encType=\"multipart/form-data\"\r\n        className=\"flex justify-between items-center\"\r\n      >\r\n        <label\r\n          htmlFor=\"bodyImages\"\r\n          className=\"block p-2 rounded-full hover:bg-sky-100 cursor-pointer\"\r\n        >\r\n          <MdAddPhotoAlternate className=\"text-sky-500\" size={24} />\r\n        </label>\r\n        <input\r\n          ref={imagesInputRef}\r\n          type=\"file\"\r\n          id=\"bodyImages\"\r\n          name=\"bodyImages\"\r\n          hidden\r\n          multiple\r\n          accept=\"image/*\"\r\n          onChange={(e) =>\r\n            addImageHandler(\r\n              e,\r\n              (file) => setImageFiles((cur) => [...cur, file]),\r\n              (data) => setImagesPreview((cur) => [...cur, data]),\r\n              imageFiles\r\n            )\r\n          }\r\n        />\r\n        <Button\r\n          onClick={handleSubmit((data) =>\r\n            onSubmit({\r\n              data,\r\n              fetchUrl: \"/post\",\r\n              actionArray,\r\n              onPageIndexPlus: homePageIndex.onPlus,\r\n              errorMessage: \"포스트를 작성해주세요.\",\r\n            })\r\n          )}\r\n          bgColor={bgBlue}\r\n          textColor={textWhite}\r\n          hoverColor={hoverDarkBlue}\r\n          label=\"Post\"\r\n          bold\r\n          fit\r\n        />\r\n      </form>\r\n\r\n      {imagesPreview.length > 0 && (\r\n        <>\r\n          <hr className=\"my-3\" />\r\n          <div className=\"flex gap-3\">\r\n            {imagesPreview.map((src, idx) => (\r\n              <div\r\n                key={src + idx}\r\n                className=\"w-[50px] h-[50px] flex cursor-pointer\"\r\n                onClick={(e) =>\r\n                  removeImageHandler(\r\n                    e,\r\n                    imagesInputRef,\r\n                    (fileArray) => setImageFiles(fileArray!),\r\n                    (dataArray) => setImagesPreview(dataArray!),\r\n                    imageFiles,\r\n                    imagesPreview\r\n                  )\r\n                }\r\n              >\r\n                <img\r\n                  data-idx={idx}\r\n                  src={src}\r\n                  alt=\"BodyImages\"\r\n                  className=\"w-full object-cover\"\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {bodyContent}\r\n      {footerContent}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WritePost;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport WritePost from \"../components/WritePost\";\r\nimport Lists from \"../components/Lists\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nimport useLists from \"../hooks/useLists\";\r\nimport useHomePageIndex from \"../hooks/useHomePageIndex\";\r\n\r\nimport { RootState } from \"../redux/store\";\r\nimport { onPosts } from \"../redux/reducers/posts\";\r\n\r\nconst Home = () => {\r\n  const [isEnter, setIsEnter] = useState(false);\r\n\r\n  const posts = useSelector((state: RootState) => state.posts);\r\n  const homePageIndex = useHomePageIndex();\r\n  const pageIndexPlus = homePageIndex.onPlus;\r\n\r\n  const { data, isValidating, mutate, hasMoreData } = useLists({\r\n    pathname: \"/post/all\",\r\n    category: \"HOME\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (hasMoreData && posts.length === 0) {\r\n      setIsEnter(true);\r\n    }\r\n  }, [posts.length, hasMoreData]);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    if (hasMoreData && isEnter) {\r\n      mutate()\r\n        .then((data) => {\r\n          dispatch(onPosts(data));\r\n          setIsEnter(false);\r\n          pageIndexPlus();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [isEnter, mutate, data, dispatch, hasMoreData, pageIndexPlus]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"hidden sm:block mt-4\">\r\n        <WritePost />\r\n        <hr className=\"my-3\" />\r\n      </div>\r\n      <hr className=\"sm:hidden\" />\r\n      {hasMoreData && posts.length === 0 ? (\r\n        <Loader size={80} text />\r\n      ) : (\r\n        <Lists\r\n          lists={posts}\r\n          isValidating={isValidating}\r\n          isEnter={isEnter}\r\n          setIsEnter={setIsEnter}\r\n          text=\"포스팅이 없습니다.\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_a","onClick","label","bold","Icon","icon","bgColor","textColor","hoverColor","large","disabled","fit","React","className","concat","size","defaultValues","method","me","useSelector","state","imagesInputRef","useRef","coverImageInputRef","useState","imagesPreview","setImagesPreview","_b","imageFiles","setImageFiles","_c","coverImagePreview","setCoverImagePreview","_d","coverImage","setCoverImage","_e","profileImagePreview","setProfileImagePreview","_f","profileImage","setProfileImage","dispatch","useDispatch","_g","useForm","register","watch","handleSubmit","setValue","clearErrors","errors","formState","useEffect","isEmpty","key","resetAll","keyDownHandler","e","textarea","document","querySelector","style","height","scrollHeight","target","maxHeight","onSubmit","props","data","fetchUrl","actionArray","shouldCommentAlert","onClose","post","onPageIndexPlus","errorMessage","body","length","toast","error","formData","FormData","_i","imageFiles_1","file","append","id","JSON","stringify","forEach","action","axios","response_1","sent","username","slice","userId","user","patch","AxiosError","console","log","error_1","response","status","alert","watchAllFields","homePageIndex","useHomePageIndex","useMemo","useWriteForm","bodyContent","src","alt","_extends","placeholder","rows","onKeyDown","options","Date","now","images","views","createdAt","toISOString","updatedAt","likedIds","comments","push","onPostsAdd","onProfilePostsAdd","footerContent","encType","htmlFor","MdAddPhotoAlternate","ref","type","name","hidden","multiple","accept","onChange","addImageHandler","cur","__spreadArray","Button","onPlus","bgBlue","textWhite","hoverDarkBlue","map","idx","removeImageHandler","fileArray","dataArray","isEnter","setIsEnter","posts","pageIndexPlus","useLists","pathname","category","isValidating","mutate","hasMoreData","then","onPosts","catch","WritePost","Loader","text","Lists","lists"],"sourceRoot":""}